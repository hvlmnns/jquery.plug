$.plug=function(a,b,c){if(this.play=function(a,b){var c=a?a+"__"+b.prototype.name:b.prototype.name;$.fn[c]=function(a,d){var e=d;return this.each(function(){e&&c!=b.prototype.name&&(this.opts=this.opts||{},this.opts[c]=e),new b(this,a,e?e:!1)})}},this.socket=function(a){return $.sockets=$.sockets||{},"object"==typeof $.sockets[a]?!1:($.sockets[a]=$.sockets[a]||{},$.sockets[a][a]=function(a,b,c){b?this.__execute(a,b,c):this.__execute(a,!1,c)},$.extend($.sockets[a][a].prototype,{name:a,__execute:function(b,c,d){return c=c?a+"__"+c:!1,c?$(b)[c](b,d):(init=a+"__init",$.fn[init]?$(b)[init](b,d):console.info("Please provide a init method for the "+a+" plugin."))}}),void this.play(!1,$.sockets[a][a]))},this.socket(a),b||c){if(!b||"string"!=typeof b)return console.info("Please provide a method name for the "+a+" plugin.");$.sockets[a][b]=function(c){if(c.opts){var d=c.opts[a+"__"+b];this.opts=d?d:{}}this.plugName=a,this.el=$(c),this.init()},$.extend($.sockets[a][b].prototype,{name:b,init:function(){console.info("Init function for the "+a+" "+b+" method has not been set. Plugin may not behave as desired.")}},c),this.play(a,$.sockets[a][b])}};
//# sourceMappingURL=jquery.plug.min.js.map